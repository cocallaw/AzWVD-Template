{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "vmNameBaseName": {
      "type": "string",
      "maxLength": 10,
      "minLength": 3,
      "metadata": {
        "description": "Base VM that will concated/incrimented for resources"
      }
    },
    "vmHostSize": {
      "type" : "string",
      "allowedValues": [
       "Standard_F2s",
       "Standard_D1_v2",
       "Standard_D2s_v3"
      ]
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "OS": {
      "type": "string",
      "defaultValue": "Windows Server 2016",
      "allowedValues": [
        "Windows 10 Multisession with Office 365 ProPlus",
        "Windows 10 Multisession",
        "Windows Server 2016"
      ],
      "metadata": {
        "description": "OS Platform for the VM"
      }
    },
    "AVSFault":{
      "type":"int",
      "defaultValue":2
    },
    "AVSUpdate":{
      "type":"int",
      "defaultValue":5
    },
    "existingVnetRG": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing VNet Resource Group"
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing VNet"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing Subnet"
      }
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "subnetRef": "[resourceId(parameters('existingVnetRG'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVnetName'),parameters('existingSubnetName'))]",
    "availabilitySetName": "[concat(parameters('vmNameBaseName'),'-avs')]",
    "Windows 10 Multisession with Office 365 ProPlus": {
      "publisher": "MicrosoftWindowsDesktop",
      "offer": "office-365",
      "sku": "1903-evd-o365pp",
      "version": "latest"
    },
    "Windows 10 Multisession": {
      "publisher": "MicrosoftWindowsDesktop",
      "offer": "Windows-10",
      "sku": "19h1-evd",
      "version": "latest"
    },
    "Windows Server 2016": {
      "publisher": "MicrosoftwindowsServer",
      "offer": "WindowsServer",
      "sku": "2016-Datacenter",
      "version": "latest"
    },
    "imageReference": "[variables(parameters('OS'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[parameters('AVSFault')]",
        "platformUpdateDomainCount": "[parameters('AVSUpdate')]",
        "managed": true
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNameBaseName'),'-nic-', copyindex())]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNameBaseName'),'-', copyIndex())]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VMHostSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNameBaseName'),'-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNameBaseName'),'-nic-', copyindex()))]"
            }
          ]
        }
      }
    },
    {
    "apiVersion": "2018-10-01",
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[concat(parameters('vmNameBaseName'),'-', copyindex(),'/', 'joindomain')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "virtualMachineLoop"
    ],
    "copy": {
      "name": "rdsh-domain-join-loop",
      "count": "[parameters('numberOfInstances')]"
    },
    "properties": {
      "publisher": "Microsoft.Compute",
      "type": "JsonADDomainExtension",
      "typeHandlerVersion": "1.3",
      "autoUpgradeMinorVersion": true,
      "settings": {
        "name": "[parameters('domainToJoin')]",
        "ouPath": "[parameters('ouPath')]",
        "user": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
        "restart": "true",
        "options": "3"
      },
      "protectedSettings": {
        "password": "[parameters('domainPassword')]"
      }
    }
  }
  ]
}
