{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "vmNameBaseName": {
      "type": "string",
      "maxLength": 10,
      "minLength": 3,
      "metadata": {
        "description": "Base VM that will concated/incrimented for resources"
      }
    },
    "vmHostSize": {
      "type": "string",
      "allowedValues": [
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_D1_v2",
        "Standard_D2s_v3"
      ]
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 50,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },

    "HostImageType": {
      "type": "string",
      "allowedValues": [
        "AzureGallery",
        "CustomImage"
      ]
    },
    "OS": {
      "type": "string",
      "defaultValue": "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus",
      "allowedValues": [
        "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus",
        "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus-1909",
        "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus-1903",
        "Windows-10-Enterprise-multi-session",
        "Windows-10-Enterprise-multi-session-1909",
        "Windows-10-Enterprise-multi-session-1903",
        "Windows-10-Enterprise-Latest",
        "Windows-10-Enterprise-1909",
        "Windows-10-Enterprise-1903",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "OS Platform for the VM"
      }
    },
    "rdshIsWindowsServer": {
      "type": "bool",
      "metadata": {
        "description": "If the VM is a Windows Server SKU (2016, 2012R2, etc.), enter true. If the VM is a Windows client SKU (Windows 10, Windows 7, etc.)."
      }
    },
    "CustomImageSourceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[Required when HostImageType = CustomImage] Name of the managed disk."
      }
    },
    "CustomImageSourceResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[Required when HostImageType = CustomImage] Resource group name for the managed disk, if you choose to provide one."
      }
    },
    "AVSFault": {
      "type": "int",
      "defaultValue": 2
    },
    "AVSUpdate": {
      "type": "int",
      "defaultValue": 5
    },
    "existingVnetRG": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing VNet Resource Group"
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing VNet"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of Existing Subnet"
      }
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "domainUserFQDN": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "ouPath": {
      "type": "string",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account."
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "ExistingTenantGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the tenant group in the WVD deployment"
      }
    },
    "ExistingTenantName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Existing WVD Tenant"
      }
    },
    "HostPoolName": {
      "type": "string",
      "metadata": {
        "description": "Name of existing WVD Hostpool"
      }
    },
    "TenantAdminUpnOrApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate. The UPN or ApplicationId must be an RDS Owner in the WVD Tenant to create the hostpool or an RDS Owner of the host pool to provision the host pool with additional VMs."
      }
    },
    "TenantAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password that corresponds to the tenant admin UPN."
      }
    },
    "rdshIs1809OrLater": {
      "type": "bool",
      "metadata": {
        "description": "If the VM is Windows Server 2019+ or Windows 10 1809+, enter true. Else, enter false."
      }
    },
    "isServicePrincipal": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "The boolean value indicating if the credentials are for a service principal."
      }
    },
    "AadTenantId": {
      "type": "string",
      "metadata": {
        "description": "[Required when isServicePrincipal = True] This value identifies the Azure AD tenant of the service principal."
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base URL for Windows Virtual Desktop info"
      },
      "defaultValue": "https://raw.githubusercontent.com/cocallaw/AzWVD-Template/master"
    }
  },
  "variables": {
    "existingDomainUsername": "[first(split(parameters('domainUserFQDN'), '@'))]",
    "existingDomainName": "[last(split(parameters('domainUserFQDN'), '@'))]",
    "subnetRef": "[resourceId(parameters('existingVnetRG'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVnetName'),parameters('existingSubnetName'))]",
    "ImageSourceLower": "[toLower(parameters('HostImageType'))]",
    "availabilitySetName": "[concat(parameters('vmNameBaseName'),'-avs')]",
    "HostPoolFriendlyName": "Hostpool",
    "HostPoolDescription": "Created through ARM template",
    "RegistrationExpirationHours": "48",
    "deployAgentURI": "[concat(parameters('baseUrl'),'/Scripts/WVD/DeployAgent.zip')]",
    "wvdsrvscriptURI": "https://raw.githubusercontent.com/cocallaw/AzWVD-Template/master/Scripts/WVD/Script.ps1",
    "RDBrokerURL": "https://rdbroker.wvd.microsoft.com",
    "galleryImage": {
      "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "19h2-evd-o365pp",
        "version": "latest"
      },
      "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus-1909": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "19h2-evd-o365pp",
        "version": "latest"
      },
      "Windows-10-Enterprise-multi-session-with-Office-365-ProPlus-1903": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "1903-evd-o365pp",
        "version": "latest"
      },
      "Windows-10-Enterprise-multi-session": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-evd",
        "version": "latest"
      },
      "Windows-10-Enterprise-multi-session-1909": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-evd",
        "version": "latest"
      },
      "Windows-10-Enterprise-multi-session-1903": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h1-evd",
        "version": "latest"
      },
      "Windows-10-Enterprise-Latest": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-ent",
        "version": "latest"
      },
      "Windows-10-Enterprise-1909": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h2-ent",
        "version": "latest"
      },
      "Windows-10-Enterprise-1903": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "19h1-ent",
        "version": "latest"
      },
      "2016-Datacenter": {
        "publisher": "MicrosoftwindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest"
      }
    },
    "VMImageReference": {
      "customimage": {
        "id": "[resourceId(parameters('CustomImageSourceResourceGroup'), 'Microsoft.Compute/images', parameters('CustomImageSourceName'))]"
      },
      "gallery": "[variables('galleryimage')[parameters('OS')]]"
    }
  },
  "functions": [
    {
      "namespace": "main",
      "members": {
        "getVMImageReferenceCustomVHD": {
          "parameters": [
            {
              "name": "imageName",
              "type": "string"
            },
            {
              "name": "imageRG",
              "type":"string"
            }
          ],
          "output": {
            "type": "object",
            "value": {
              "id": "[resourceId(parameters('imageRG'), 'Microsoft.Compute/images', parameters('imageName'))]"
            }
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": "[parameters('AVSFault')]",
        "platformUpdateDomainCount": "[parameters('AVSUpdate')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNameBaseName'),'-nic-', copyindex())]",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "copy": {
        "name": "host-nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNameBaseName'),'-', copyIndex())]",
      "apiVersion": "2019-07-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "host-vmLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "host-nicLoop"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VMHostSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNameBaseName'),'-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[if(equals(variables('ImageSourceLower'), 'customimage'), main.getVMImageReferenceCustomVHD(parameters('CustomImageSourceName'),parameters('CustomImageSourceResourceGroup')), variables('VMImageReference')[variables('ImageSourceLower')])]",
          "osDisk": {
            "createOption": "FromImage",
            "name": "[concat(parameters('vmNameBaseName'),'-', copyIndex(),'-osdisk')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNameBaseName'),'-nic-', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNameBaseName'),'-', copyindex(),'/', 'joindomain')]",
      "condition": "[not(parameters('rdshIsWindowsServer'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "vmHost-CreationLinked"
      ],
      "copy": {
        "name": "rdsh-domain-join-loop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "name": "[parameters('domainToJoin')]",
          "ouPath": "[parameters('ouPath')]",
          "user": "[concat(parameters('domainToJoin'), '\\', variables('existingDomainUsername'))]",
          "restart": "true",
          "options": "[parameters('domainJoinOptions')]"
        },
        "protectedSettings": {
          "password": "[parameters('domainPassword')]"
        }
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNameBaseName'),'-', copyindex(),'/', 'dscextension')]",
      "location": "[resourceGroup().location]",
      "condition": "[parameters('rdshIsWindowsServer')]",
      "dependsOn": [
        "vmHost-CreationLinked"
      ],
      "copy": {
        "name": "rdsh-dsc-loop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[concat(parameters('baseUrl'),'/DSC/Configuration.zip')]",
          "ConfigurationFunction": "Configuration.ps1\\SessionHost",
          "Properties": {
            "DomainName": "[parameters('domainToJoin')]",
            "AdminCreds": {
              "UserName": "[variables('existingDomainUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('domainPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNameBaseName'),'-', copyindex(),'/','rdAgent')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "rdsh-domain-join-loop",
        "rdsh-dsc-loop"
      ],
      "copy": {
        "name": "rdsh-enable-loop",
        "count": "[parameters('numberOfInstances')]"
      },
      "tags": {
        "displayName": "script"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('wvdsrvscriptURI')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File Script.ps1',' -RDBrokerURL \"', variables('RDBrokerURL'), '\"', ' ', ' -definedTenantGroupName \"', parameters('ExistingTenantGroupName'), '\"',' ',' -TenantName \"', parameters('ExistingTenantName'), '\"',' ', ' -HostPoolName \"', parameters('HostPoolName'), '\"',' ', ' -FriendlyName \"', variables('HostPoolFriendlyName'), '\"',' ', ' -Description \"', variables('HostPoolDescription'), '\"',' ', ' -Hours \"', variables('RegistrationExpirationHours'), '\"',' ', ' -TenantAdminUPN \"', parameters('TenantAdminUpnOrApplicationId'), '\"',' ', ' -TenantAdminPassword \"', parameters('TenantAdminPassword'), '\"',' ',' -localAdminUsername \"', variables('existingDomainUsername'), '\"',' ', ' -localAdminpassword \"', parameters('domainPassword'), '\"',' ', ' -Fileuri \"', variables('deployAgentURI'), '\"', ' ', ' -rdshIs1809OrLater \"', parameters('rdshIs1809OrLater'), '\"', ' ', ' -isServicePrincipal \"', parameters('isServicePrincipal'), '\"', ' ', ' -AadTenantId \"', parameters('AadTenantId'), '\"')]"
        }
      }
    }
  ]
}
